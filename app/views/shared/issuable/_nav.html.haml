- type = local_assigns.fetch(:type, :issues)
- page_context_word = type.to_s.humanize(capitalize: false)

%ul.nav-links.issues-state-filters.mobile-separator
  %li{ class: active_when(params[:state] == 'opened') }>
    = link_to page_filter_path(state: 'opened', label: true), id: 'state-opened', title: "Filter by #{page_context_word} that are currently opened.", data: { state: 'opened' } do
      #{issuables_state_counter_text(type, :opened)}

  - if type == :merge_requests
    %li{ class: active_when(params[:state] == 'merged') }>
      = link_to page_filter_path(state: 'merged', label: true), id: 'state-merged', title: 'Filter by merge requests that are currently merged.', data: { state: 'merged' } do
        #{issuables_state_counter_text(type, :merged)}

    %li{ class: active_when(params[:state] == 'closed') }>
      = link_to page_filter_path(state: 'closed', label: true), id: 'state-closed', title: 'Filter by merge requests that are currently closed and unmerged.', data: { state: 'closed' } do
        #{issuables_state_counter_text(type, :closed)}
  - else
    %li{ class: active_when(params[:state] == 'closed') }>
      = link_to page_filter_path(state: 'closed', label: true), id: 'state-closed', title: 'Filter by issues that are currently closed.', data: { state: 'closed' } do
        #{issuables_state_counter_text(type, :closed)}

  = render 'shared/issuable/nav_links/all', page_context_word: page_context_word, counter: issuables_state_counter_text(type, :all)
