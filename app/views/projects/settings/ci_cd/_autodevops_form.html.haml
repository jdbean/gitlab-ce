.row
  .col-lg-12
    = form_for @project, url: project_settings_ci_cd_path(@project, anchor: 'autodevops-settings') do |f|
      = form_errors(@project)
      %fieldset.builds-feature.js-auto-devops-settings
        .form-group
          - message = auto_devops_warning_message(@project)
          - ci_file_formatted = '<code>.gitlab-ci.yml</code>'.html_safe
          - if message
            %p.auto-devops-warning-message.settings-message.text-center
              = message.html_safe
          = f.fields_for :auto_devops_attributes, @auto_devops do |form|
            .card.auto-devops-card
              .card-body
                .form-check
                  = form.check_box :enabled, class: 'form-check-input js-toggle-extra-settings', checked: @project.auto_devops_enabled?
                  = form.label :enabled, class: 'form-check-label' do
                    %strong= s_('CICD|Default to Auto DevOps pipeline')
                    - if @project.has_auto_devops_implicitly_enabled?
                      %span.badge.badge-info.js-instance-default-badge= s_('CICD|instance enabled')
                  .form-text.text-muted
                    = s_('CICD|The Auto DevOps pipeline will run if no alternative CI configuration file is found.')
                    = link_to _('More information'), help_page_path('topics/autodevops/index.md'), target: '_blank'
              .card-footer.js-extra-settings{ class: @project.auto_devops_enabled? || 'hidden' }
                = form.label :domain do
                  %strong= _('Domain')
                = form.text_field :domain, class: 'form-control', placeholder: 'domain.com'
                .form-text.text-muted
                  = s_('CICD|Add a domain where deployed apps will be served. A wildcard DNS record matching the base domain is required.')
                .form-text.text-muted
                  - if cluster_ingress_domain = cluster_ingress_domain(@project)
                    - cluster_ingress_domain_link = link_to cluster_ingress_domain, 'http://' + cluster_ingress_domain, target: '_blank', rel: 'noopener noreferrer'
                    = s_('CICD|If no domain is specified, %{nip_domain} will be used as a default alternative.').html_safe % { nip_domain: cluster_ingress_domain_link }
                  - else
                    - project_clusters_link = link_to('Kubernetes cluster', project_clusters_path(@project))
                    = s_('CICD|Alternatively, create a %{kubernetes} with Ingress installed to automatically use a wildcard domain.').html_safe % { kubernetes: project_clusters_link }
                  = link_to s_('More information'), help_page_path('topics/autodevops/index.md', anchor: 'auto-devops-base-domain'), target: '_blank'

                %label.prepend-top-10
                  %strong= s_('CICD|Deployment strategy')
                %p.settings-message.text-center
                  = s_('CICD|Deployment strategy needs a domain name to work correctly.')
                .form-check
                  = form.radio_button :deploy_strategy, 'continuous', class: 'form-check-input'
                  = form.label :deploy_strategy_continuous, class: 'form-check-label' do
                    = s_('CICD|Continuous deployment to production')
                    = link_to icon('question-circle'), help_page_path('topics/autodevops/index.md', anchor: 'auto-deploy'), target: '_blank'
                .form-check
                  = form.radio_button :deploy_strategy, 'manual', class: 'form-check-input'
                  = form.label :deploy_strategy_manual, class: 'form-check-label' do
                    = s_('CICD|Automatic deployment to staging, manual deployment to production')
                    = link_to icon('question-circle'), help_page_path('ci/environments.md', anchor: 'manually-deploying-to-environments'), target: '_blank'

          = f.submit _('Save changes'), class: "btn btn-success prepend-top-15"
